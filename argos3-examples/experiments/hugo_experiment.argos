<?xml version="1.0" ?>
<argos-configuration>

    <!-- ************************* -->
    <!-- * General configuration * -->
    <!-- ************************* -->
    <framework>
        <!--
            System configuration:
            - threads: the number of slave threads to parallelize the
              computation. For less than 100 robots thread management is not
              beneficial, so here we set it to 0. When set to 0, it means that
              the computation is not parallelized: the main thread does
              everything.
        -->
        <system threads="0"/>
        <!--
            Experiment configuration:
            - length: total experiment time in seconds (0 means the experiment
              has no time limit)
            - ticks_per_second: number of ticks per second (int value)
            - random_seed: seed of the main random number generator. If unset
              or set to zero, this value is taken from the clock and a warning
              message is displayed.
        -->
        <experiment length="0"
                    ticks_per_second="30"
                    random_seed="124"/>
    </framework>

    <!-- *************** -->
    <!-- * Controllers * -->
    <!-- *************** -->
    <controllers>

        <!--
             Here you list the controllers to be used in the experiment.
             The XML tag is set by the REGISTER_CONTROLLER(class, "tag") macro.
             You find it in the .cpp file of your controller.
             For this example, the macro is called in
             controllers/footbot_diffusion.cpp:100.
        -->

        <!--
            The attributes are:
            - id: a unique a identifier for this controller, to be used in the
              subsequent <arena> section to say which robots use which
              controller
            - library: the path to the compiled library containing you
              controller.
        -->
        <pipuck_hugo_controller id="ppc"
                                library="build/controllers/pipuck_hugo/libpipuck_hugo">
            <!--
                The <actuators> section contains a list of the actuatocdrs used by
                this controller.
                If you forget a to mention an actuator here and then request it
                in the controller, an error occurs.
                For a list of the possible actuators, type at the command prompt:
                $ launch_argos -q actuators

                Multiple implementations of an actuator are possible. To
                identify which one you want to use, pass it in the
                'implementation' attribute below. When you type the 'argos3 -q'
                command, the implementation is in the square brackets following
                the name of the device:

                $ argos3 -q actuators
                ...
                footbot_wheels [default]
                ...
            -->
            <actuators>
                <!--                <differential_steering implementation="default" />-->
                <!--                <footbot_distance_scanner implementation="default" />-->
                <pipuck_differential_drive implementation="default"/>
                <simple_radios implementation="default"/>
                <!--                <range_and_bearing implementation="default" medium="rab"/>-->
            </actuators>
            <!--
                The <sensors> section contains a list of the sensors used by
                this controller.
                If you forget a to mention a sensor here and then request it in
                the controller, an error occurs.
                For a list of the possible sensors, type at the command prompt:
                $ argos3 -q sensors
            -->
            <sensors>
                <!--                <footbot_proximity implementation="default" show_rays="true" />-->
                <!--                <footbot_distance_scanner implementation="rot_z_only" show_rays="false" />-->
                <pipuck_rangefinders implementation="default" show_rays="true"/>
                <simple_radios implementation="default" show_rays="false"/>
                <!--                <range_and_bearing implementation="default" medium="rab"/>-->
                <positioning implementation="default"/>
            </sensors>
            <!--
                The <params> section is passed as-is to the controller's Init()
                function.
                The user, writing the controller, defines how it is organized.
                To understand what these parameters are for, check the
                controller's header file in
                controllers/footbot_diffusion/footbot_diffusion.h.
            -->
            <params alpha="1" delta="0.01" velocity="20"/>
        </pipuck_hugo_controller>

    </controllers>

    <!-- ****************** -->
    <!-- * Loop functions * -->
    <!-- ****************** -->
    <!--    <loop_functions library="build/loop_functions/trajectory_loop_functions_pipuck/libtrajectory_loop_functions_pipuck"-->
    <!--                    label="trajectory_loop_functions_pipuck" />-->
<!--    <loop_functions library="build/loop_functions/coverage_loop_functions_pipuck/libcoverage_loop_functions_pipuck"-->
<!--                    label="coverage_loop_functions_pipuck"/>-->
    <loop_functions library="build/loop_functions/agent_vision_loop_functions_pipuck/libagent_vision_loop_functions_pipuck"
                    label="agent_vision_loop_functions_pipuck"/>
    <!--    <loop_functions library="build/loop_functions/radios_loop_functions/libradios_loop_functions"-->
    <!--                        label="radios_loop_functions" />-->
    <!--    <loop_functions library="build/loop_functions/position_loop_functions/libposition_loop_functions"-->
    <!--                        label="position_loop_functions" />-->


    <!-- *********************** -->
    <!-- * Arena configuration * -->
    <!-- *********************** -->
    <!--
        Here you place all the objects in the arena.
        All linear measures are expressed in meters.
        Angles are expressed in degrees.
        The 'size' attribute contains the size of the arena around the
        origin.
        To get help about which entities are available, type at the command
        prompt:

        $ argos3 -q entities

        and to get help about a specific entity (for instance, the box)

        $ argos3 -q box
    -->
    <arena size="10, 10, 1" center="0,0,0.5">

        <!-- Place four boxes in a square to delimit the arena -->
        <box id="wall_north" size="9,0.1,0.5" movable="false">
            <body position="0,4.5,0" orientation="0,0,0"/>
        </box>
        <box id="wall_south" size="9,0.1,0.5" movable="false">
            <body position="0,-4.5,0" orientation="0,0,0"/>
        </box>
        <box id="wall_east" size="0.1,9,0.5" movable="false">
            <body position="4.5,0,0" orientation="0,0,0"/>
        </box>
        <box id="wall_west" size="0.1,9,0.5" movable="false">
            <body position="-4.5,0,0" orientation="0,0,0"/>
        </box>

        <box id="object" size="3,4,0.5" movable="false">
            <body position="0,0,0" orientation="0,0,0"/>
        </box>

        <box id="object 2" size="1,1,0.5" movable="false">
            <body position="2,-3,0" orientation="0,0,0"/>
        </box>

        <box id="object 3" size="1,1,0.5" movable="false">
            <body position="0,3,0" orientation="0,0,0"/>
        </box>


        <box id="object 4" size="2,1,0.5" movable="false">
            <body position="-3,4,0" orientation="0,0,0"/>
        </box>

        <box id="object 5" size="1,1,0.5" movable="false">
            <body position="-3,0,0" orientation="0,0,0"/>
        </box>



        <!--        &lt;!&ndash; Place a foot-bot in the origin and bind it to the controller &ndash;&gt;-->
        <!--        <foot-bot id="fb_0">-->
        <!--            <body position="0,0,0" orientation="0,0,0" />-->
        <!--            <controller config="ppc"/>-->
        <!--        </foot-bot>-->

        <pipuck id="pipuck1" wifi_medium="wifi" wifi_range="4.0">
            <body position="0,-3,0" orientation="-45,0,0"/>
            <controller config="ppc"/>
            <devices>
                <!--            <simple_radios>-->
                <!--                &lt;!&ndash; this radio is just in range of the other radio &ndash;&gt;-->
                <!--                <simple_radio id="wifi" anchor="base" position="0,0,.0125"-->
                <!--                              medium="wifi" range="0.01" />-->
                <!--            </simple_radios>-->
            </devices>
        </pipuck>

                <pipuck id="pipuck2" wifi_medium="wifi" wifi_range="4.0">
                    <body position="1,-3,0" orientation="85,0,0"/>
                    <controller config="ppc"/>
        <!--            <devices>-->
        <!--                <simple_radios>-->
        <!--                    &lt;!&ndash; this radio is just in range of the other radio &ndash;&gt;-->
        <!--                    <simple_radio id="wifi" anchor="base" position="0,0,.0125"-->
        <!--                                  medium="wifi" range="0.01" />-->
        <!--                </simple_radios>-->
        <!--            </devices>-->
                </pipuck>

        <!--        <pipuck id="pipuck3" wifi_medium="wifi">-->
        <!--            <body position="0.7,0,0" orientation="0,0,0"/>-->
        <!--            <controller config="ppc"/>-->
        <!--        </pipuck>-->

        <!--        <distribute>-->
        <!--            <position method="uniform" min="-2,-2,0" max="2,2,0" />-->
        <!--            <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />-->
        <!--            <entity quantity="2" max_trials="100">-->
        <!--                <pipuck id="pp">-->
        <!--                    <controller config="ppc" />-->
        <!--                </pipuck>-->
        <!--            </entity>-->
        <!--        </distribute>-->
    </arena>


    <!-- ******************* -->
    <!-- * Physics engines * -->
    <!-- ******************* -->
    <!--
        In ARGoS, multiple physics engines can run at the same time.
        In this section you say which engines to use for the experiment.
        To know which engines are available, type at the command prompt:

        $ argos3 -q physics_engines
    -->
    <physics_engines>
        <!--
            Use a 2D dynamics engine.
        -->
        <dynamics2d id="dyn2d"/>
        <!--        <dynamics3d id="dyn3d" iterations="1" />-->
    </physics_engines>

    <!-- ********* -->
    <!-- * Media * -->
    <!-- ********* -->
    <!--
        Here you specify the media in use. Media allow robots to communicate.
        In this experiment, robots do not communicate, so no media are
        specified.
        To know which media are available, type at the command prompt:

        $ argos3 -q media
    -->
    <media>
        <!--        <range_and_bearing id="rab" />-->
        <simple_radio id="wifi" index="grid" grid_size="20,20,20"/>
    </media>

    <!-- ****************** -->
    <!-- * Visualization * -->
    <!-- ****************** -->
    <!--
        Here you specify which visualization to use.
        You can also not specify a visualization at all, in which case ARGoS
        will run without showing anything.
        Having no visualization is useful when you run ARGoS in a batch of
        experiments to collect statistics.
        To know which visualizations are available, type at the command
        prompt:

        $ argos3 -q visualizations
    -->
    <visualization>
        <qt-opengl>
            <!--            <user_functions library="build/loop_functions/trajectory_loop_functions_pipuck/libtrajectory_loop_functions_pipuck"-->
            <!--                            label="trajectory_qtuser_functions_pipuck" />-->
            <!--            <user_functions library="build/loop_functions/coverage_loop_functions_pipuck/libcoverage_loop_functions_pipuck"-->
            <!--                            label="coverage_qtuser_functions_pipuck" />-->
            <!--            <user_functions library="build/loop_functions/id_loop_functions/libid_loop_functions"-->
            <!--                            label="id_qtuser_functions" />-->
            <user_functions
                    library="build/loop_functions/agent_vision_loop_functions_pipuck/libagent_vision_loop_functions_pipuck"
                    label="agent_vision_qtuser_functions_pipuck"/>
            <camera>
                <placements>
<!--                    <placement index="0" position="-6.83677,-0.0492575,7.1301" look_at="-6.14438,-0.0492575,6.40857"-->
<!--                               up="0.721522,-3.4075e-17,0.692391" lens_focal_length="30"/>-->
                    <placement index="0" position="0,0,10" look_at="0,0,0"
                               up="0.721522,-3.4075e-17,0.692391" lens_focal_length="25"/>
                </placements>
            </camera>
        </qt-opengl>
    </visualization>

</argos-configuration>
