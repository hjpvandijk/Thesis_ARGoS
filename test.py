import matplotlib.pyplot as plt
import time

# Define the data from the text file
route = [
    # ((-3.1939365055177955, 3.1602629592708134), (-2.890625, 3.90625)),
    # ((-2.890625, 3.90625), (-2.8125, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.8125, 3.90625)),
    # ((-2.8125, 3.90625), (-2.65625, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.65625, 3.90625)),
    # ((-2.65625, 3.90625), (-2.5, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.5, 3.90625)),
    # ((-2.5, 3.90625), (-2.34375, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.34375, 3.90625)),
    # ((-2.34375, 3.90625), (-2.1875, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.1875, 3.90625)),
    # ((-2.1875, 3.90625), (-2.03125, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-2.03125, 3.90625)),
    # ((-2.03125, 3.90625), (-1.875, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.875, 3.90625)),
    # ((-1.875, 3.90625), (-1.71875, 3.90625)),
    # ((-1.71875, 3.90625), (-1.71875, 4.0625)),
    # ((-1.71875, 4.0625), (-1.5625, 4.0625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.5625, 4.0625)),
    # ((-1.5625, 4.0625), (-1.40625, 4.0625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.40625, 4.0625)),
    # ((-1.40625, 4.0625), (-1.40625, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.40625, 3.90625)),
    # ((-1.40625, 3.90625), (-1.25, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.25, 3.90625)),
    # ((-1.25, 3.90625), (-1.09375, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-1.09375, 3.90625)),
    # ((-1.09375, 3.90625), (-0.9375, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.9375, 3.90625)),
    # ((-0.9375, 3.90625), (-0.78125, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.78125, 3.90625)),
    # ((-0.78125, 3.90625), (-0.625, 3.90625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.90625)),
    # ((-0.625, 3.90625), (-0.625, 3.75)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.75)),
    # ((-0.625, 3.75), (-0.625, 3.59375)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.59375)),
    # ((-0.625, 3.59375), (-0.625, 3.4375)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.4375)),
    # ((-0.625, 3.4375), (-0.625, 3.28125)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.28125)),
    # ((-0.625, 3.28125), (-0.625, 3.125)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 3.125)),
    # ((-0.625, 3.125), (-0.625, 2.96875)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 2.96875)),
    # ((-0.625, 2.96875), (-0.625, 2.8125)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 2.8125)),
    # ((-0.625, 2.8125), (-0.625, 2.65625)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 2.65625)),
    # ((-0.625, 2.65625), (-0.625, 2.5)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 2.5)),
    # ((-0.625, 2.5), (-0.625, 2.34375)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 2.34375)),
    # ((-0.625, 2.34375), (-0.625, 2.1875)),
    # ((-0.625, 2.1875), (-0.46875, 2.1875)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.46875, 2.1875)),
    # ((-0.46875, 2.1875), (-0.46875, 2.03125)),
    # ((-3.1939365055177955, 3.1602629592708134), (-0.46875, 2.03125)),
    # ((-0.46875, 2.03125), (-0.46875, 1.875)), ((-3.1939365055177955, 3.1602629592708134), (-0.46875, 1.875)),

    # ((-0.46875, 1.875), (-0.46875, 1.71875)),

    # ((-3.1939365055177955, 3.1602629592708134), (-0.46875, 1.71875)),

    # ((-0.46875, 1.71875), (-0.625, 1.71875)),

    # ((-3.1939365055177955, 3.1602629592708134), (-0.625, 1.71875)),

    # ((-0.625, 1.71875), (-0.703125, 1.71875)),

    # ((-0.703125, 1.71875), (-0.78125, 1.796875)),

    # ((-0.78125, 1.796875), (-0.78125, 1.71875)),

    # ((-3.1939365055177955, 3.1602629592708134), (-0.78125, 1.71875)),

    # ((-0.78125, 1.71875), (-0.625, 1.71875))

    ((-3.2365031527924688, 3.2328114685204619), (-3.046875, 3.90625)),

    ((-3.046875, 3.90625), (-2.96875, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.96875, 3.90625)),

    ((-2.96875, 3.90625), (-2.8125, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.8125, 3.90625)),

    ((-2.8125, 3.90625), (-2.65625, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.65625, 3.90625)),

    ((-2.65625, 3.90625), (-2.5, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.5, 3.90625)),

    ((-2.5, 3.90625), (-2.34375, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.34375, 3.90625)),

    ((-2.34375, 3.90625), (-2.1875, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.1875, 3.90625)),

    ((-2.1875, 3.90625), (-2.03125, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-2.03125, 3.90625)),

    ((-2.03125, 3.90625), (-1.875, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.875, 3.90625)),

    ((-1.875, 3.90625), (-1.71875, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.71875, 3.90625)),

    ((-1.71875, 3.90625), (-1.5625, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.5625, 3.90625)),

    ((-1.5625, 3.90625), (-1.40625, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.40625, 3.90625)),

    ((-1.40625, 3.90625), (-1.25, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.25, 3.90625)),

    ((-1.25, 3.90625), (-1.09375, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-1.09375, 3.90625)),

    ((-1.09375, 3.90625), (-0.9375, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.9375, 3.90625)),

    ((-0.9375, 3.90625), (-0.78125, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.78125, 3.90625)),

    ((-0.78125, 3.90625), (-0.625, 3.90625)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.90625)),

    ((-0.625, 3.90625), (-0.625, 3.75)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.75)),

    ((-0.625, 3.75), (-0.625, 3.59375)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.59375)),

    ((-0.625, 3.59375), (-0.625, 3.4375)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.4375)),

    ((-0.625, 3.4375), (-0.625, 3.28125)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.28125)),

    ((-0.625, 3.28125), (-0.625, 3.125)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 3.125)),

    ((-0.625, 3.125), (-0.625, 2.96875)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 2.96875)),

    ((-0.625, 2.96875), (-0.625, 2.8125)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 2.8125)),

    ((-0.625, 2.8125), (-0.625, 2.65625)),

    ((-3.2365031527924688, 3.2328114685204619), (-0.625, 2.65625)),

    ((-0.625, 2.65625), (-0.625, 2.5))

]
# plt.ion()

# Plot the route
# plt.figure(figsize=(10, 8))
# here we are creating sub plots
figure, ax = plt.subplots(figsize=(10, 8))

plt.title("Visualization of the Route")
plt.xlabel("X Coordinate")
plt.ylabel("Y Coordinate")
plt.grid()


for (x1, y1), (x2, y2) in route:
    # plt.plot([x1, x2], [y1, y2], marker='o')
    ax.plot([x1, x2], [y1, y2], marker='o')
    # figure.canvas.draw()
    # figure.canvas.flush_events()
    # plt.flush_events()
    # time.sleep(0.5)
plt.show()
