physical:
    robot_diameter: 0.08 # Agent diameter in meters
    robot_weight: 0.4 # Agent weight in kg
    robot_wheel_radius: 0.0205 # Agent wheel radius in meters
    robot_inter_wheel_distance: 0.0656 # Agent inter-wheel distance in meters
battery:
  capacity: 400 # Battery capacity in mAh
  voltage: 7.2 # Battery voltage in volts
motor:
  stall_current: 1.5 # Motor stall current in A
  stall_torque: 0.8 # Motor stall torque in Nm
  no_load_rpm: 250 # Max rpm of the motor with no load
  no_load_current: 0.16 # Motor no load current in A
control:
  turn_threshold: 15 # The min angle difference in degrees between the desired and current orientation to start turning
  turn_speed_ratio: 0.1 # The ratio of the maximum speed of the motors to use when turning
  360_degrees_steps: 360 # The number of steps we divide the 360 degrees in when deciding the free directions
  object_safety_radius: 0.1 # The safety radius around an object in meters
  agent_safety_radius_margin: 0.1 # The margin around the agent's safety radius in meters
communication:
  wifi_speed: 10 # The speed of the wifi in mbps
  max_jitter: 10 # The maximum jitter in milliseconds
  message_loss_probability: 0.05 # The probability of a message being lost
  matrix_exchange_interval: 10 # The interval in seconds between matrix exchanges

forces:
  frontier_search_radius: 10.0 # The radius in meters around the agent to search for frontiers
  agent_avoidance_radius: 0.68 # The radius in meters around the agent to avoid other agents
  agent_cohesion_radius: 1.5 # The radius in meters around the agent to align with other agents
  agent_alignment_radius: 1.5 # The radius in meters around the agent to align with other agents
  object_avoidance_radius_margin: 0.2 # The margin around the object's safety radius in meters (to be added to agent_safety_radius + object_safety_radius))
  virtual_wall_avoidance_weight: 1.1 # The weight of the virtual wall avoidance force
  agent_cohesion_weight: 0 # The weight of the agent cohesion force
  agent_avoidance_weight: 1.15 # The weight of the agent avoidance force
  agent_alignment_weight: 0 # The weight of the agent alignment force
  unexplored_frontier_weight: 0.3 # The weight of the frontier force
  frontier_fitness:
    distance_weight: 0 # The weight of the euclidean distance to the target in the fitness function
    size_weight: 1 # The weight of the size of the frontier in the fitness function
map:
  coverage_resolution: 0.2 # The resolution of the coverage matrix in meters --> will be rounded down to the nearest power of 2 division of the map size
  obstacle_resolution: 0.2 # The resolution of the obstacle matrix in meters --> will be rounded down to the nearest power of 2 division of the map size
  coverage_evaporation_time: 100 # The time in seconds it takes for a coverage pheromone value to evaporate
  obstacle_evaporation_time: 100 # The time in seconds it takes for an obstacle pheromone value to evaporate
sensors:
  position_noise: 103.3 # Position noise in centimeters (uniform)
  position_jitter: 0 # Position jitter in centimeters (uniform)
  orientation_noise: 8 # Orientation sensor noise in degrees (uniform)
  orientation_jitter: 2 # Orientation sensor jitter in degrees (uniform)
  distance_sensor_noise: 5 # Distance sensor noise in centimeters (uniform)
  distance_sensor_range: 2 # Distance sensor range in meters